plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.11'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.yufeng'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'net.devh:grpc-spring-boot-starter:3.1.0.RELEASE'
	implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.0'


	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/io.grpc/grpc-testing
	testImplementation group: 'io.grpc', name: 'grpc-testing', version: '1.64.0'


	if (JavaVersion.current().isJava9Compatible()) {
		// Workaround for @javax.annotation.Generated
		// see: https://github.com/grpc/grpc-java/issues/3633
		implementation 'javax.annotation:javax.annotation-api:1.3.1'
	}

}

protobuf {
	protoc {
		// The artifact spec for the Protobuf Compiler
		artifact = 'com.google.protobuf:protoc:3.6.1'
	}
	plugins {
		// Optional: an artifact spec for a protoc plugin, with "grpc" as
		// the identifier, which can be referred to in the "plugins"
		// container of the "generateProtoTasks" closure.
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.15.1'
		}
	}
	generateProtoTasks {
		ofSourceSet('main').configureEach {
			plugins {
				// Apply the "grpc" plugin whose spec is defined above, without
				// options.  Note the braces cannot be omitted, otherwise the
				// plugin will not be added. This is because of the implicit way
				// NamedDomainObjectContainer binds the methods.
				grpc { }
			}
		}
	}
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
